<?xml version="1.0" encoding="UTF-8"?>
<assemblies>
  <assembly name="WCT Unit tests [chrome.85]" environment="chrome.85" test-framework="web-component-tester" run-date="2021-04-09" run-time="08:59:46" total="24" passed="24" failed="0" skipped="0">
    <collection passed="24" failed="0" skipped="0">
      <test name="should return true when an object is passed" method="CellsBehaviors.CellsStateBehavior.__isObject.should return true when an object is passed" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should return false when something different than an object is passed" method="CellsBehaviors.CellsStateBehavior.__isObject.should return false when something different than an object is passed" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should return an empty object" method="CellsBehaviors.CellsStateBehavior.__computeEmptyState.should return an empty object" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should return a merged object between object passed and _state" method="CellsBehaviors.CellsStateBehavior.__computeState.when an object is passed.should return a merged object between object passed and _state" type="test/cells-state-behavior-test.html" result="Pass" time="1"/>
      <test name="should set a new state and return a new reference" method="CellsBehaviors.CellsStateBehavior._setState.when object is received.should set a new state and return a new reference" type="test/cells-state-behavior-test.html" result="Pass" time="1"/>
      <test name="and should return new references for objects inside the state" method="CellsBehaviors.CellsStateBehavior._setState.when object is received.and should return new references for objects inside the state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="and should not return new references for objects inside objects inside the state" method="CellsBehaviors.CellsStateBehavior._setState.when object is received.and should not return new references for objects inside objects inside the state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should merge state with object received and return a new reference" method="CellsBehaviors.CellsStateBehavior._setState.when object is received.should merge state with object received and return a new reference" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should do nothing" method="CellsBehaviors.CellsStateBehavior._setState.when something different than an object is received.should do nothing" type="test/cells-state-behavior-test.html" result="Pass" time="1"/>
      <test name="should reset state" method="CellsBehaviors.CellsStateBehavior._setState.when null is received.should reset state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should reset state" method="CellsBehaviors.CellsStateBehavior._setState.when undefined is received.should reset state" type="test/cells-state-behavior-test.html" result="Pass" time="1"/>
      <test name="should reset all props to the references in _state" method="CellsBehaviors.CellsStateBehavior._resetStateToProps.should reset all props to the references in _state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should return true when an object is passed" method="CellsBehaviors.CellsStateBehavior.__isObject.should return true when an object is passed" type="test/cells-state-behavior-test.html" result="Pass" time="1"/>
      <test name="should return false when something different than an object is passed" method="CellsBehaviors.CellsStateBehavior.__isObject.should return false when something different than an object is passed" type="test/cells-state-behavior-test.html" result="Pass" time="1"/>
      <test name="should return an empty object" method="CellsBehaviors.CellsStateBehavior.__computeEmptyState.should return an empty object" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should return a merged object between object passed and _state" method="CellsBehaviors.CellsStateBehavior.__computeState.when an object is passed.should return a merged object between object passed and _state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should set a new state and return a new reference" method="CellsBehaviors.CellsStateBehavior._setState.when object is received.should set a new state and return a new reference" type="test/cells-state-behavior-test.html" result="Pass" time="1"/>
      <test name="and should return new references for objects inside the state" method="CellsBehaviors.CellsStateBehavior._setState.when object is received.and should return new references for objects inside the state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="and should not return new references for objects inside objects inside the state" method="CellsBehaviors.CellsStateBehavior._setState.when object is received.and should not return new references for objects inside objects inside the state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should merge state with object received and return a new reference" method="CellsBehaviors.CellsStateBehavior._setState.when object is received.should merge state with object received and return a new reference" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should do nothing" method="CellsBehaviors.CellsStateBehavior._setState.when something different than an object is received.should do nothing" type="test/cells-state-behavior-test.html" result="Pass" time="1"/>
      <test name="should reset state" method="CellsBehaviors.CellsStateBehavior._setState.when null is received.should reset state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should reset state" method="CellsBehaviors.CellsStateBehavior._setState.when undefined is received.should reset state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
      <test name="should reset all props to the references in _state" method="CellsBehaviors.CellsStateBehavior._resetStateToProps.should reset all props to the references in _state" type="test/cells-state-behavior-test.html" result="Pass" time="0"/>
    </collection>
  </assembly>
</assemblies>