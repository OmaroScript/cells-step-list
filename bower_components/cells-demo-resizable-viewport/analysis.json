{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "Utility component to showcase components at different browser viewport sizes",
      "path": "cells-demo-resizable-viewport/cells-demo-resizable-viewport.js",
      "properties": [
        {
          "name": "_breakpoint",
          "type": "?",
          "description": "Returns the selected breakpoint Object.\n   ",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 79,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "breakpoints",
          "type": "Object | null | undefined",
          "description": "List of available breakpoints.\n`height` property is optional.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_sortBreakpoints\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"mobile\":{\"width\":360,\"height\":640,\"name\":\"Mobile\"},\"tablet\":{\"width\":768,\"height\":1024,\"name\":\"Tablet\"},\"desktop\":{\"width\":1024,\"height\":800,\"name\":\"Desktop\"}}"
        },
        {
          "name": "_sortedBreakpoints",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 6
            },
            "end": {
              "line": 30,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "selectedBreakpoint",
          "type": "Object | null | undefined",
          "description": "Selected breakpoint.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "selectedKey",
          "type": "string | null | undefined",
          "description": "Selected breakpoint key.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedKeyChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"mobile\""
        },
        {
          "name": "_breakpointsChanged",
          "type": "boolean | null | undefined",
          "description": "Used to change the reset button visibility.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "reset",
          "description": "Restore the original breakpoints width.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectedKeyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_sortBreakpoints",
          "description": "Sorts breakpoints from greater to lower width.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "breakpoints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrack",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrackStart",
          "description": "Sets _dragging to true if the dragging is horizontal.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrackX",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrackEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 2
            },
            "end": {
              "line": 149,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 150,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "cellsDemoResizableViewport",
      "attributes": [
        {
          "name": "breakpoints",
          "description": "List of available breakpoints.\n`height` property is optional.",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "selected-breakpoint",
          "description": "Selected breakpoint.",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "selected-key",
          "description": "Selected breakpoint key.",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-breakpoint-changed",
          "description": "Fired when the `selectedBreakpoint` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-key-changed",
          "description": "Fired when the `selectedKey` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-demo-resizable-viewport"
    }
  ]
}
