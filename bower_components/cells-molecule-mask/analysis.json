{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "# cells-molecule-mask\n\n![Certificated](https://img.shields.io/badge/certificated-yes-brightgreen.svg) ![Polymer 2.x](https://img.shields.io/badge/Polymer-2.x-green.svg)\n\n\n`<cells-molecule-mask>` is a component which you pass a text value and it will be masked as 'mask-charsAAAA'\n(being 'AAAA' the last four digits of the text and mask-char some custom chars, like · or \\*).\n\nYou can switch between showing the masked or the whole text by clicking on the icon. You\ncan set the icon's size with an even number between 8 and 64 (16 by default).\n\nAlso, you can set the icon to be shown when the number is masked and the icon when it is NOT masked.\n\nNo icon will be displayed if not icon is defined.\n\n`masked` defines if the text is masked or not.\n\nExample:\n\n```html\n<cells-molecule-mask\n  value=\"ES54029990012312321\"\nmasked\nmask-chars=\"•\"\nicon-masked=\"icon-code-masked\"\nicon-not-masked=\"icon-code-not-masked\"\nicon-size=\"8\">\n</* cells-molecule-mask>\n```\n\nLast 8 chars won't be masked\n\n```html\n<cells-molecule-mask\n  value=\"ES54029990012312321\"\nvisible-chars=\"8\"\nmasked\nmask-chars=\"•\"\nicon-masked=\"icon-code-masked\"\nicon-not-masked=\"icon-code-not-masked\"\nicon-size=\"8\">\n</* cells-molecule-mask>\n```\n\nInitially not masked\n\n```html\n<cells-molecule-mask\n  number=\"ES54029990012312321\"\nmask-chars=\"•••\"\nicon-masked=\"icon-code-masked\"\nicon-not-masked=\"icon-code-not-masked\">\n</* cells-molecule-mask>\n```\n\n## Icons\n\nSince this component uses icons, it will need an [iconset](https://bbva.cellsjs.com/guides/best-practices/cells-icons.html) in your project as an [application level dependency](https://bbva.cellsjs.com/guides/advanced-guides/application-level-dependencies.html). In fact, this component uses an iconset in its demo.\n\n## Styling\n\nThe following custom properties and mixins are available for styling:\n\n### Custom Properties\n| Custom Property                           | Selector     | CSS Property  | Value        |\n| ----------------------------------------- | ------------ | ------------- | ------------ |\n| --cells-molecule-mask-margin-right        | ::slotted(*) | padding-right | 0.1875rem    |\n| --cells-molecule-mask-margin-right        | .mask        | margin-right  | 0.1875rem    |\n| --cells-molecule-mask-separator-font-size | .mask        | font-size     | 1rem         |\n| --cells-molecule-mask-icon-color          | .icon        | color         | currentColor |\n| --cells-molecule-mask-number-font-size    | .number      | font-size     | inherit      |\n### @apply\n| Mixins                            | Selector         | Value |\n| --------------------------------- | ---------------- | ----- |\n| --cells-molecule-mask             | :host            | {}    |\n| --cells-molecule-mask-wrapper     | .wrapper         | {}    |\n| --cells-molecule-mask-content     | .content         | {}    |\n| --cells-molecule-mask-separator   | .mask            | {}    |\n| --cells-molecule-mask-number      | .number          | {}    |\n| --cells-molecule-mask-icon-button | .btn-transparent | {}    |",
      "summary": "",
      "path": "cells-molecule-mask/cells-molecule-mask.js",
      "properties": [
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Number to be masked",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "maskChars",
          "type": "string | null | undefined",
          "description": "Chars with to mask the number",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"*\""
        },
        {
          "name": "visibleChars",
          "type": "number | null | undefined",
          "description": "Amount of chars of 'value' NOT be masked",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "4"
        },
        {
          "name": "iconMasked",
          "type": "string | null | undefined",
          "description": "Icon (code) to display when number is masked",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "iconNotMasked",
          "type": "string | null | undefined",
          "description": "Icon (code) to display when number is NOT masked",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "iconSize",
          "type": "number | null | undefined",
          "description": "Icon size (8 to 64, only even numbers)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "16"
        },
        {
          "name": "masked",
          "type": "boolean | null | undefined",
          "description": "If true, then value is masked",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_iconHidden",
          "type": "boolean | null | undefined",
          "description": "Icons only displayed if both icons defined (not falsy)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_displayedIcon",
          "type": "string | null | undefined",
          "description": "Handles if the icon should be displayed or not (true if displayed)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 159,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_displayedValue",
          "type": "string | null | undefined",
          "description": "Displayed number",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_buttonLabel",
          "type": "string | null | undefined",
          "description": "Displayed mask chars",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_displayedMask",
          "type": "string | null | undefined",
          "description": "Switches between showing or masking the number",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "_displayedIconComputed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "masked"
            },
            {
              "name": "iconMasked"
            },
            {
              "name": "iconNotMasked"
            }
          ]
        },
        {
          "name": "_displayedValueComputed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "masked"
            },
            {
              "name": "maskChars"
            },
            {
              "name": "visibleChars"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_computeButtonLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "masked"
            }
          ]
        },
        {
          "name": "_getMaskedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 205,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "visibleChars"
            }
          ]
        },
        {
          "name": "_computeIconHidden",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "iconMasked"
            },
            {
              "name": "iconNotMasked"
            }
          ]
        },
        {
          "name": "_onClickIcon",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 211,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 89,
          "column": 0
        },
        "end": {
          "line": 212,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "CellsMoleculeMask",
      "attributes": [
        {
          "name": "value",
          "description": "Number to be masked",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "mask-chars",
          "description": "Chars with to mask the number",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "visible-chars",
          "description": "Amount of chars of 'value' NOT be masked",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "icon-masked",
          "description": "Icon (code) to display when number is masked",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-not-masked",
          "description": "Icon (code) to display when number is NOT masked",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-size",
          "description": "Icon size (8 to 64, only even numbers)",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "masked",
          "description": "If true, then value is masked",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "masked-changed",
          "description": "Fired when the `masked` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-molecule-mask"
    }
  ]
}
